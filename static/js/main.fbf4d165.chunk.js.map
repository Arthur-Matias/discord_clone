{"version":3,"sources":["assets/Discord-Logo-White.svg","components/Layout/styles.tsx","components/ServerButton/styles.tsx","components/ServerButton/index.tsx","components/ServerList/styles.tsx","components/ServerList/index.tsx","components/ServerName/styles.tsx","components/ServerName/index.tsx","components/ChannelInfo/styles.tsx","components/ChannelInfo/index.tsx","components/ChannelButton/styles.tsx","components/ChannelButton/index.tsx","components/ChannelList/styles.tsx","components/ChannelList/index.tsx","components/UserInfo/styles.tsx","components/UserInfo/index.tsx","components/ChannelMessage/styles.tsx","components/ChannelMessage/index.tsx","components/ChannelData/styles.tsx","components/ChannelData/index.tsx","components/UserList/styles.tsx","components/UserList/index.tsx","components/Layout/index.tsx","styles/globalStyles.tsx","App.tsx","index.tsx"],"names":["module","exports","Grid","styled","div","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","className","src","Discord","alt","Container","Separator","ServerList","Title","h1","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","Category","AddCategoryIcon","Add","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Message","Header","Content","Mention","ChannelMessage","author","date","content","hasMention","isBot","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","Array","from","keys","map","n","key","type","placeholder","Role","User","UserRow","nickname","UserList","Layout","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbf4d165.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Discord-Logo-White.1c8a54f2.svg\";","import styled from \"styled-components\";\n\n//Server list - SL\n//Server Name - SN\n//Channel Info - CI\n//Channel List - CL\n//Channel Data - CD\n//User List - UL\n//User Info - UI\n\nexport const Grid = styled.div`\n  display: grid;\n\n    grid-template-columns: 71px 240px auto 240px;\n    grid-template-rows: 46px auto 52px;\n    grid-template-areas: \n        'SL SN CI CI'\n        'SL CL CD UL'\n        'SL UI CD UL';\n\n    height: 100vh;\n`;\n","import styled from \"styled-components\";\n\nimport { Props } from '.';\n\nexport const Button = styled.button<Props>`\n    display:flex;\n    align-items: center;\n    justify-content: center;\n    flex-shrink: 0;\n\n    width: 48px;\n    height: 48px;\n\n    margin-bottom: 8px;\n\n    background-color: ${props => props.isHome ? 'var(--discord)' : 'var(--primary)'};\n\n    position: relative;\n    cursor: pointer;\n    border-radius: 50%;\n\n    > img {\n        width: 40px;\n        heigth: 40px;\n    }\n\n    &::before{\n        width: 9px;\n        height: 9px;\n\n        position: absolute;\n        left: -17px;\n        top: calc(50% - 4.5px);\n\n        background-color: var(--white);\n        border-radius: 50%;\n\n        content: '';\n        display: ${props => (props.hasNotifications ? 'inline' : 'none')};\n    }\n    &::after{\n        background-color: var(--notification);\n        width: auto;\n        height: 16px;\n\n        padding: 0 4px;\n\n        position: absolute;\n        bottom: -4px;\n        right: -4px;\n\n        border-radius: 12px;\n        border: 4px solid var(--quaternary);\n\n        text-align: right;\n        font-size: 13px;\n        font-weight: bold;\n        color: var(--white);\n\n        content: '${(props)=> props.mentions && props.mentions}';\n        display: ${props => props.mentions && props.mentions> 0 ? 'inline' : 'none' }\n    }\n\n    transition: border-radius 100ms, background-color 100ms;\n\n    &.active, &:hover{\n        border-radius: 16px;\n        background-color: ${props => props.isHome? 'var(--discord)':'var(--discord)'}\n    }\n`;\n","import React from 'react';\n\nimport { Button } from './styles';\n\nimport Discord from '../../assets/Discord-Logo-White.svg';\n\nexport interface Props{\n    selected?: boolean;\n    isHome?: boolean;\n    hasNotifications?: boolean;\n    mentions?:number;\n}\n\nconst ServerButton: React.FC<Props> = ({\n    selected,\n    isHome,\n    hasNotifications,\n    mentions\n}) => {\n    return (\n        <Button\n            isHome={isHome}\n            hasNotifications = {hasNotifications}\n            mentions={mentions}\n            className={selected ? 'active' : ''}\n            >\n            {isHome && <img src={Discord} alt=\"Discord logo\" />}\n        </Button>\n    )\n};\n\nexport default ServerButton;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    grid-area: SL;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    background-color: var(--tertiary);\n    padding: 11px 0;\n\n    max-height: 100vh;\n    overflow-y: scroll;\n\n    ::-webkit-scrollbar{\n        display: none;\n    }\n`;\n\nexport const Separator = styled.div`\n    width: 32px;\n    border-bottom 2px solid var(--quaternary);\n\n    margin-bottom: 8px;\n`;\n","import React from 'react';\n\nimport ServerButton from '../ServerButton';\n\nimport { Container, Separator } from './styles';\n\nconst ServerList: React.FC = () => {\n    return (\n        <Container>\n            <ServerButton isHome />\n\n            <Separator />\n            <ServerButton />\n            <ServerButton hasNotifications />\n            <ServerButton mentions={3} />\n            <ServerButton />\n            <ServerButton />\n            <ServerButton />\n            <ServerButton hasNotifications />\n            <ServerButton />\n            <ServerButton />\n            <ServerButton mentions={1} />\n            <ServerButton />\n        </Container>\n    )\n}\n\nexport default ServerList;","import styled from \"styled-components\";\nimport { ExpandMore } from 'styled-icons/material'\n\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;  \n\n  padding: 0 11px 0 16px;\n\n  background-color: var(--secondary);\n\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\n\n  z-index: 2;\n`\n\nexport const Title = styled.h1`\n  font-size: 16px;\n  font-weight: bold;\n\n  color: var(--white);\n`;\n\nexport const ExpandIcon = styled(ExpandMore)`\n\n  width: 28px;\n  height: 28px;\n\n  color: var(--white);\n  cursor: pointer;\n\n`;","import React from 'react';\n\nimport { Container, Title, ExpandIcon } from './styles';\n\nconst ServerName: React.FC = () => {\n    return (\n        <Container>\n            <Title>Servidor do Arthur</Title>\n            <ExpandIcon />\n        </Container>\n    )\n};\n\nexport default ServerName;","import styled from \"styled-components\";\nimport { Hashtag } from \"styled-icons/heroicons-outline\"\n\nexport const Container = styled.div`\n    grid-area: CI;\n\n    display: flex;\n    align-items: center;\n\n    padding: 0 17px;\n    background-color: var(--primary);\n\n    box-shadow: rgba(0,0,0, 0.2) 0px 1px 0px 0px;\n    z-index: 2;\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n    width: 24px;\n    height: 24px;\n\n    color: var(--symbol);\n`;\n\nexport const Title = styled.h1`\n    margin-left: 9px;\n\n    font-size: 16px;\n    font-weight: bold;\n\n    color: var(--white)\n`;\n\nexport const Separator = styled.div`\n    height: 24px;\n    width: 1px;\n\n    background-color: var(--white);\n    opacity: 0.2;\n\n    margin: 0 13px\n`;\n\nexport const Description = styled.span`\n    font-size: 15px;\n    color: var(--gray);\n`;","import React from 'react';\nimport { Container, HashtagIcon, Title, Separator, Description } from './styles';\n\nconst ChannelInfo: React.FC = () => {\n    return (\n        <Container>\n            <HashtagIcon />\n            <Title>chat-livre</Title>\n            <Separator />\n            <Description>Canal aberto para conversas</Description>\n        </Container>\n    )\n};\n\nexport default ChannelInfo;","import styled from \"styled-components\";\nimport { Hashtag } from 'styled-icons/heroicons-outline';\nimport {PersonAdd, Settings } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  cursor: pointer;\n\n  padding: 5px 3px;\n  border-radius: 5px;\n\n  background-color: transparent;\n\n  transition: background-color 100ms;\n\n  > div{\n    display: flex;\n    align-items: center;\n  }\n  >div span{\n    margin-left: 5px;\n    color: var(--senary);\n  }\n\n  &:hover, &.active {\n    background-color: var(--quinary);\n    >div span{\n      color: var(--white);\n    }\n    >div svg{\n      opacity: 1;\n    }\n  }\n\n`;\n\nexport const HashtagIcon = styled(Hashtag)`\n  display: block !important;\n  width: 20px;\n  height: 20px;\n\n  color: var(--symbol);\n`;\n\nexport const InviteIcon = styled(PersonAdd)`\n  width: 16px;\n  height: 16px;\n  \n  color: var(--symbol);\n  cursor: pointer;\n\n  opacity: 0;\n  transition: opacity 100ms;\n\n  &:hover{\n    color: var(--white);\n  }\n`;\n\nexport const SettingsIcon = styled(Settings)`\nwidth: 16px;\nheight: 16px;\nmargin-left: 3px;\nopacity: 0;\n\ncolor: var(--symbol);\ncursor: pointer;\n\ntransition: opacity 100ms;\n\n&:hover{\n  color: var(--white);\n}\n`;","import React from 'react';\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\n\nexport interface Props{\n    channelName: string;\n    selected?: boolean;\n}\n\nconst ChannelButton: React.FC<Props> = ({\n    channelName,\n    selected\n}) => {\n    return (\n        <Container className={selected?'active':''}>\n            <div>\n                <HashtagIcon />\n                <span>{channelName}</span>\n            </div>\n            <div>\n                <InviteIcon />\n                <SettingsIcon />\n            </div>\n        </Container>\n    )\n};\n\nexport default ChannelButton;","import styled from \"styled-components\";\nimport { Add } from \"styled-icons/material\";\n\nexport const Container = styled.div`\n  grid-area: CL;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 24px 9.5px 0 16px;\n  background-color: var(--secondary);\n`;\n\nexport const Category = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  margin-bottom: 6px;\n\n  > span{\n    text-transform: uppercase;\n    font-size:12px;\n    font-weight: 500;\n    color: var(--gray);\n  }\n`;\n\nexport const AddCategoryIcon = styled(Add)`\n  width: 21px;\n  height: 21px;\n\n  color: var(--symbol);\n  cursor: pointer;\n`;","import React from 'react';\n\nimport ChannelButton from '../ChannelButton';\n\nimport { Container, Category, AddCategoryIcon } from './styles';\n\nconst ChannelList: React.FC = () => {\n    return (\n        <Container>\n            <Category>\n                <span>Canais de texto</span>\n                <AddCategoryIcon />\n            </Category>\n            <ChannelButton channelName='chat-livre'/>\n            <ChannelButton channelName='trabalho'/>\n            <ChannelButton channelName='lolzinho'/>\n            <ChannelButton channelName='csgo'/>\n            <ChannelButton channelName='valorant'/>\n        </Container>\n    )\n};\n\nexport default ChannelList;","import styled from \"styled-components\";\nimport { Mic, Headset, Settings } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: UI;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  padding: 10px;\n  background-color: var(--quaternary);\n  box-shadow: rgba(0,0,0, 0.2) 0px px 0px 0px;\n`;\n\nexport const Profile = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Avatar = styled.div`\n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n\n  background-color: var(--gray);\n`;\n\nexport const UserData = styled.div`\n  margin-left: 8px;\n\n  display: flex;\n  flex-direction: column;\n\n  >strong{\n    color: var(--white);\n    font-size: 13px;\n    display: block;\n  }\n  >span{\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\n\nexport const Icons = styled.div`\n  display: flex;\n  align-items: center;\n\n  > svg:not(:first-child){\n    margin-left: 7px;\n  }\n`;\n\nexport const MicIcon = styled(Mic)`\n  width: 20px;\n  height: 20px;\n  \n  color: var(--white);\n  opacity: 0.7;\n  cursor: pointer;\n\n  transition: opacity 100ms;\n\n  &:hover{\n    opacity: 1;\n  }\n`;\n\nexport const HeadphoneIcon = styled(Headset)`\n  width: 20px;\n  height: 20px;\n\n  color: var(--white);\n  opacity: 0.7;\n  cursor: pointer;\n\n  transition: opacity 100ms;\n\n  &:hover{\n    opacity: 1;\n  }\n`;\n\nexport const SettingsIcon = styled(Settings)`\n  width: 20px;\n  height: 20px;\n\n  color: var(--white);\n  opacity: 0.7;\n  cursor: pointer;\n\n  transition: opacity 100ms;\n\n  &:hover{\n    opacity: 1;\n  }\n`;\n","import React from 'react';\nimport { Container, Profile, Avatar, UserData, Icons, MicIcon, HeadphoneIcon, SettingsIcon } from './styles';\n\nconst UserInfo: React.FC = () => {\n    return (\n        <Container>\n\n            <Profile>\n                <Avatar />\n                <UserData>\n                    <strong>Arthur Matias</strong>\n                    <span>#6699</span>\n                </UserData>\n            </Profile>\n\n            <Icons>\n                <MicIcon />\n                <HeadphoneIcon />\n                <SettingsIcon />\n            </Icons>\n        </Container>\n    )\n};\n\nexport default UserInfo;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n\n  padding: 4px 16px;\n  margin-right: 4px;\n\n  background-color: transparent\n\n  &.mention {\n    background-color: var(--mention-message);\n\n    border-left: 2px solid var(--mention-detail);\n    padding-left: 14px;\n  }\n\n  & + div {\n    margin-top: 13px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 40px;\n  height: 40px;\n\n  background-color: var(--secondary);\n  border-radius: 50%;\n\n  &.bot{\n    background-color: var(--mention-detail);\n  }\n`;\n\nexport const Message = styled.div`\n  min-height: 40px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  \n  margin-left: 17px;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  align-items: center;\n\n  >strong{\n    color: var(--white);\n    font-size: 16px;\n  }\n\n  >span{\n    margin-left: 6px;\n\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 11px;\n  }\n\n  > time{\n    margin-left: 6px;\n    color: var(--gray);\n    font-size: 13px;\n  }\n`;\n\nexport const Content = styled.div`\n  text-align: left;\n  font-size: 10px;\n  color: var(--white);\n`;\n\nexport const Mention = styled.span`\n  color: var(--link);\n  cursor: pointer;\n  &:hover{\n    text-decoration: underline;\n  }\n`;\n","import React from 'react';\n\nimport { Container, Avatar, Message, Header, Content } from './styles';\nexport { Mention } from './styles'\nexport interface Props{\n    author: string;\n    date:string;\n    content: string | React.ReactElement | React.ReactNode;\n    hasMention?: boolean;\n    isBot?: boolean;\n}\n\nconst ChannelMessage: React.FC<Props> = ({\n    author,\n    date,\n    content,\n    hasMention,\n    isBot\n}) => {\n    return (\n        <Container className={hasMention? 'mention':''}>\n            <Avatar className={isBot?'bot':''}/>\n\n            <Message>\n                <Header>\n                    <strong>{author}</strong>\n                    {isBot && <span>Bot</span>}\n                    <time>{date}</time>\n                </Header>\n                <Content>{content}</Content>\n            </Message>\n        </Container>\n    )\n};\n\nexport default ChannelMessage;","import styled from \"styled-components\";\nimport { AlternateEmail } from 'styled-icons/material';\n\nexport const Container = styled.div`\n  grid-area: CD;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  background-color: var(--primary);\n`;\n\nexport const Messages = styled.div`\n  padding: 20px 0;\n\n  display: flex;\n  flex-direction: column;\n\n  max-height: calc(100vh - 46px - 68px);\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n\n`;\n\nexport const InputWrapper = styled.div`\n  width: 100%;\n  padding: 0 16px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 44px;\n\n  padding: 0 10px 0 57px;\n  border-radius: 7px;\n\n  color: var(--white);\n  background-color: var(--chat-input);\n\n  position: relative;\n\n  &::placeholder{\n    color: var(--gray);\n  }\n\n  ~ svg {\n    position: relative;\n    top: -50%;\n    left: 14px;\n    transition: 180ms ease-in-out;\n  }\n`;\n\nexport const InputIcon = styled(AlternateEmail)`\n  width: 24px;\n  height: 24px;\n\n  color: var(--gray);\n`;\n","import React, { useRef, useEffect } from 'react';\n\nimport ChannelMessage, { Mention } from '../ChannelMessage';\n\nimport { Container, Messages, InputWrapper, Input, InputIcon } from './styles';\n\nconst ChannelData: React.FC = () => {\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>\n    \n    useEffect(()=>{\n        const div = messagesRef.current;\n\n        if(div){\n            div.scrollTop = div.scrollHeight;\n        }\n    })\n\n    return (\n        <Container>\n            <Messages ref={messagesRef}>\n                {Array.from(Array(15).keys()).map((n) =>(\n                    <ChannelMessage\n                        key={n}\n                        author=\"ygor360\"\n                        date=\"21/06/2020\"\n                        content=\"Hoje é o meu aniversário!\"\n                    />\n                ))}\n\n                <ChannelMessage\n                    author=\"pips\"\n                    date=\"21/06/2020\"\n                    content={\n                        <>\n                            <Mention>@Arthur Matias</Mention>, me carrega no valorant véi, sou mto ruim, n aguento mais perder\n                        </>\n                    }\n                    hasMention\n                    isBot\n                />\n            </Messages>\n\n            <InputWrapper>\n                <Input type=\"text\" placeholder=\"Conversar em #chat-livre\" />\n                <InputIcon />\n            </InputWrapper>\n        </Container>\n    )\n};\n\nexport default ChannelData;","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  grid-area: UL;\n\n  display: flex;\n  flex-direction: column;\n\n  padding: 3px 6px 0 16px;\n  background-color: var(--secondary);\n\n  max-height: calc(100vh - 46px);\n  overflow-y: scroll;\n\n  ::-webkit-scrollbar {\n    width: 4px\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--tertiary);\n    border-radius: 4px;\n  }\n  \n  ::-webkit-scrollbar-track {\n    background-color: var(--secondary);\n  }\n`;\n\nexport const Role = styled.span`\n  margin-top: 20px;\n\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 500;\n  color: var(--gray);\n`;\n\nexport const User = styled.div`\n  margin-top: 5px;\n  padding: 5px;\n\n  display: flex;\n  align-items: center;\n\n  cursor: pointer;\n  \n  border-radius: 4px;\n  background: transparent;\n  transition: background 100ms;\n  &:hover{\n    background: rgba(255, 255, 255, 0.1);\n  }\n\n  > strong{\n    margin-left: 13px;\n    font-weight: 500;\n    color: var(--white);\n    opacity: 0.7;\n\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n  }\n\n  > span{\n    margin-left: 9px;\n\n    background-color: var(--discord);\n    color: var(--white);\n    border-radius: 4px;\n    padding: 4px 5px;\n\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 11px;\n  }\n`;\n\nexport const Avatar = styled.div`\n  flex-shrink: 0;\n  \n  width: 32px;\n  height: 32px;\n\n  border-radius: 50%;\n  background-color: var(--primary);\n\n  &.bot{\n    background-color: var(--mention-detail);\n  }\n`;\n","import React from 'react';\n\nimport { Container, Role, User, Avatar } from './styles';\n\ninterface UserProps{\n    nickname: string;\n    isBot?:boolean;\n}\n\nconst UserRow: React.FC<UserProps> = ({\n    nickname,\n    isBot\n}) => {\n    return (\n        <User>\n            <Avatar className={isBot? 'bot':''}/>\n            <strong>{nickname}</strong>\n\n            {isBot && <span>Bot</span>}\n        </User>\n    )\n}\n\nconst UserList: React.FC = () => {\n    return (\n        <Container>\n            <Role>Disponível - 1</Role>\n\n            <UserRow nickname=\"ygor360\" />\n            <UserRow nickname=\"pips\" isBot />\n\n            <Role>Offline - 19</Role>\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n            <UserRow nickname=\"example\" />\n        </Container>\n    )\n};\n\nexport default UserList;","import React from 'react';\n\nimport { Grid } from './styles';\n\nimport ServerList from '../ServerList';\nimport ServerName from '../ServerName';\nimport ChannelInfo from '../ChannelInfo';\nimport ChannelList from '../ChannelList';\nimport UserInfo from '../UserInfo';\nimport ChannelData from '../ChannelData';\nimport UserList from '../UserList';\n\nconst Layout: React.FC = () => {\n    return (\n        <Grid>\n            <ServerList />\n            <ServerName />\n            <ChannelInfo />\n            <ChannelList />\n            <UserInfo />\n            <ChannelData />\n            <UserList />\n        </Grid>\n    )\n};\n\nexport default Layout;","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n    *{\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box\n    }\n    *, button, input{\n        border: 0;\n        outline: 0;\n\n        font-family: 'Roboto', sans-serif !important;\n    }\n\n    html, body, #root{\n        heigth: 100%;\n    }\n\n    :root {\n        --primary: #36393f;\n        --secondary: #2f3136;\n        --tertiary: rgb(32,34,37);\n        --quaternary: #292b2f;\n        --quinary: #393d42;\n        --senary: #828386;\n       \n        --white: #fff;\n        --gray: #8a8c90;\n        --chat-input: rgb(64,68,75);\n        --symbol: #74777a;\n     \n        --notification: #f84a4b;\n        --discord: #6e86d6;\n        --mention-detail: #f9a839;\n        --mention-message: #413f3f;\n     \n        --link: #5d80d6;\n     \n        --discord-clone: #6633cc;\n      }\n`;","import React from 'react';\nimport Layout from './components/Layout'\nimport GlobalStyles from './styles/globalStyles';\n\nfunction App() {\n  return (\n    <>\n      <Layout />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}
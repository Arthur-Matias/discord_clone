{"version":3,"sources":["assets/Discord-Logo-White.svg","components/Layout/styles.tsx","components/ServerButton/styles.tsx","components/ServerButton/index.tsx","components/ServerList/styles.tsx","components/ServerList/index.tsx","components/ServerName/styles.tsx","components/ServerName/index.tsx","components/ChannelInfo/styles.tsx","components/ChannelInfo/index.tsx","components/ChannelButton/styles.tsx","components/ChannelButton/index.tsx","components/ChannelList/styles.tsx","components/ChannelList/index.tsx","components/UserInfo/styles.tsx","components/UserInfo/index.tsx","components/ChannelMessage/styles.tsx","components/ChannelMessage/index.tsx","components/ChannelData/styles.tsx","components/ChannelData/index.tsx","components/UserList/styles.tsx","components/UserList/index.tsx","components/Layout/index.tsx","styles/globalStyles.tsx","App.tsx","index.tsx"],"names":["module","exports","Grid","styled","div","Button","button","props","isHome","hasNotifications","mentions","ServerButton","selected","className","src","Discord","alt","Container","Separator","ServerList","Title","h1","ExpandIcon","ExpandMore","ServerName","HashtagIcon","Hashtag","Description","span","ChannelInfo","InviteIcon","PersonAdd","SettingsIcon","Settings","ChannelButton","channelName","Category","AddCategoryIcon","Add","ChannelList","Profile","Avatar","UserData","Icons","MicIcon","Mic","HeadphoneIcon","Headset","UserInfo","Message","Header","Content","ChannelMessage","author","date","content","hasMention","isBot","Messages","InputWrapper","Input","input","InputIcon","AlternateEmail","ChannelData","messagesRef","useRef","useEffect","current","scrollTop","scrollHeight","ref","mentionTo","map","message","type","placeholder","Role","User","UserRow","nickname","isActive","UserList","Layout","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,gD,2aCUpC,IAAMC,EAAOC,UAAOC,IAAV,K,8wCCNV,IAAMC,EAASF,UAAOG,OAAV,KAWK,SAAAC,GAAK,OAAIA,EAAMC,OAAS,iBAAmB,oBAuBhD,SAAAD,GAAK,OAAKA,EAAME,iBAAmB,SAAW,UAqB7C,SAACF,GAAD,OAAUA,EAAMG,UAAYH,EAAMG,YACnC,SAAAH,GAAK,OAAIA,EAAMG,UAAYH,EAAMG,SAAU,EAAI,SAAW,UAOjD,SAAAH,GAAK,OAAIA,EAAMC,OAAQ,oB,iBCpCpCG,EAlBuB,SAAC,GAKhC,IAJHC,EAIE,EAJFA,SACAJ,EAGE,EAHFA,OACAC,EAEE,EAFFA,iBACAC,EACE,EADFA,SAEA,OACI,kBAACL,EAAD,CACIG,OAAQA,EACRC,iBAAoBA,EACpBC,SAAUA,EACVG,UAAWD,EAAW,SAAW,IAEhCJ,GAAU,yBAAKM,IAAKC,IAASC,IAAI,mB,0fCxBvC,IAAMC,EAAYd,UAAOC,IAAV,KAkBTc,EAAYf,UAAOC,IAAV,KCOPe,EArBc,WACzB,OACI,kBAACF,EAAD,KACI,kBAAC,EAAD,CAAcT,QAAM,IAEpB,kBAACU,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcT,kBAAgB,IAC9B,kBAAC,EAAD,CAAcC,SAAU,IACxB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcD,kBAAgB,IAC9B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcC,SAAU,IACxB,kBAAC,EAAD,Q,+kBClBL,IAAMO,EAAYd,UAAOC,IAAV,KAcTgB,EAAQjB,UAAOkB,GAAV,KAOLC,EAAanB,kBAAOoB,IAAPpB,CAAH,KCZRqB,EATc,WACzB,OACI,kBAAC,EAAD,KACI,kBAACJ,EAAD,2BACA,kBAACE,EAAD,Q,23BCLL,IAAML,EAAYd,UAAOC,IAAV,KAaTqB,EAActB,kBAAOuB,IAAPvB,CAAH,KAOXiB,EAAQjB,UAAOkB,GAAV,KASLH,EAAYf,UAAOC,IAAV,KAUTuB,EAAcxB,UAAOyB,KAAV,KC5BTC,EAXe,WAC1B,OACI,kBAAC,EAAD,KACI,kBAACJ,EAAD,MACA,kBAAC,EAAD,mBACA,kBAAC,EAAD,MACA,kBAACE,EAAD,sC,suCCLL,IAAMV,EAAYd,UAAOC,IAAV,KAmCTqB,EAActB,kBAAOuB,IAAPvB,CAAH,KAQX2B,EAAa3B,kBAAO4B,IAAP5B,CAAH,KAeV6B,EAAe7B,kBAAO8B,IAAP9B,CAAH,KCpCV+B,EAlBwB,SAAC,GAGjC,IAFHC,EAEE,EAFFA,YACAvB,EACE,EADFA,SAEA,OACI,kBAAC,EAAD,CAAWC,UAAWD,EAAS,SAAS,IACpC,6BACI,kBAAC,EAAD,MACA,8BAAOuB,IAEX,6BACI,kBAACL,EAAD,MACA,kBAACE,EAAD,S,upBCjBT,IAAMf,GAAYd,UAAOC,IAAV,MAUTgC,GAAWjC,UAAOC,IAAV,MAeRiC,GAAkBlC,kBAAOmC,IAAPnC,CAAH,KCNboC,GAhBe,WAC1B,OACI,kBAAC,GAAD,KACI,kBAACH,GAAD,KACI,iDACA,kBAACC,GAAD,OAEJ,kBAAC,EAAD,CAAeF,YAAY,eAC3B,kBAAC,EAAD,CAAeA,YAAY,aAC3B,kBAAC,EAAD,CAAeA,YAAY,aAC3B,kBAAC,EAAD,CAAeA,YAAY,SAC3B,kBAAC,EAAD,CAAeA,YAAY,e,2tDCdhC,IAAMlB,GAAYd,UAAOC,IAAV,MAYToC,GAAUrC,UAAOC,IAAV,MAKPqC,GAAStC,UAAOC,IAAV,MASNsC,GAAWvC,UAAOC,IAAV,MAiBRuC,GAAQxC,UAAOC,IAAV,MASLwC,GAAUzC,kBAAO0C,KAAP1C,CAAH,MAeP2C,GAAgB3C,kBAAO4C,KAAP5C,CAAH,MAeb6B,GAAe7B,kBAAO8B,IAAP9B,CAAH,MC7DV6C,GArBY,WACvB,OACI,kBAAC,GAAD,KAEI,kBAACR,GAAD,KACI,kBAACC,GAAD,MACA,kBAACC,GAAD,KACI,iDACA,yCAIR,kBAACC,GAAD,KACI,kBAACC,GAAD,MACA,kBAACE,GAAD,MACA,kBAAC,GAAD,S,8lDChBT,IAAM7B,GAAYd,UAAOC,IAAV,MAqBTqC,GAAStC,UAAOC,IAAV,MAYN6C,GAAU9C,UAAOC,IAAV,MAUP8C,GAAS/C,UAAOC,IAAV,MA6BN+C,GAAUhD,UAAOC,IAAV,MCvCLgD,ID6CQjD,UAAOyB,KAAV,MCpEoB,SAAC,GAMlC,IALHyB,EAKE,EALFA,OACAC,EAIE,EAJFA,KACAC,EAGE,EAHFA,QACAC,EAEE,EAFFA,WACAC,EACE,EADFA,MAEA,OACI,kBAAC,GAAD,CAAW5C,UAAW2C,EAAY,UAAU,IACxC,kBAAC,GAAD,CAAQ3C,UAAW4C,EAAM,MAAM,KAE/B,kBAACR,GAAD,KACI,kBAACC,GAAD,KACI,gCAASG,GACRI,GAAS,qCACV,8BAAOH,IAEX,kBAACH,GAAD,KAAUI,O,iyCC1BnB,IAAMtC,GAAYd,UAAOC,IAAV,MAUTsD,GAAWvD,UAAOC,IAAV,MAwBRuD,GAAexD,UAAOC,IAAV,MAKZwD,GAAQzD,UAAO0D,MAAV,MAwBLC,GAAY3D,kBAAO4D,KAAP5D,CAAH,MCAP6D,GA5De,WAC1B,IAAMC,EAAcC,mBAEpBC,qBAAU,WACN,IAAM/D,EAAM6D,EAAYG,QAErBhE,IACCA,EAAIiE,UAAYjE,EAAIkE,iBA+B5B,OACI,kBAAC,GAAD,KACI,kBAACZ,GAAD,CAAUa,IAAKN,GA9BL,CACd,CACIZ,OAAQ,aACRC,KAAM,aACNC,QAAS,mCACTE,OAAO,EACPD,YAAY,EACZgB,UAAW,IAEf,CACInB,OAAQ,OACRC,KAAM,aACNC,QAAS,QACTE,OAAO,EACPD,YAAY,EACZgB,UAAW,IAEf,CACInB,OAAQ,OACRC,KAAM,aACNC,QAAS,SACTE,OAAO,EACPD,YAAY,EACZgB,UAAW,KAQMC,KAAI,SAAAC,GACb,OAAO,kBAAC,GAAD,CACHrB,OAAQqB,EAAQrB,OAChBC,KAAMoB,EAAQpB,KACdC,QAASmB,EAAQnB,QACjBE,MAAOiB,EAAQjB,MACfD,WAAYkB,EAAQlB,iBAKhC,kBAACG,GAAD,KACI,kBAACC,GAAD,CAAOe,KAAK,OAAOC,YAAY,6BAC/B,kBAACd,GAAD,S,gvDC1DT,IAAM7C,GAAYd,UAAOC,IAAV,MA0BTyE,GAAO1E,UAAOyB,KAAV,MASJkD,GAAO3E,UAAOC,IAAV,MAyCJqC,GAAStC,UAAOC,IAAV,MCpEb2E,GAA+B,SAAC,GAI/B,IAHHC,EAGE,EAHFA,SACAvB,EAEE,EAFFA,MACAwB,EACE,EADFA,SAEA,OACI,kBAACH,GAAD,KACI,kBAAC,GAAD,CAAQjE,UAAW4C,EAAO,MAAMwB,EAAS,SAAS,KAClD,gCAASD,GAERvB,GAAS,uCA8BPyB,GAzBY,WACvB,OACI,kBAAC,GAAD,KACI,kBAACL,GAAD,0BAEA,kBAAC,GAAD,CAASG,SAAS,aAAavB,OAAK,IACpC,kBAAC,GAAD,CAASuB,SAAS,gBAAgBC,UAAU,IAC5C,kBAAC,GAAD,CAASD,SAAS,OAAOC,UAAU,IACnC,kBAAC,GAAD,CAASD,SAAS,OAAOC,UAAU,IAEnC,kBAACJ,GAAD,qBACA,kBAAC,GAAD,CAASG,SAAS,WAClB,kBAAC,GAAD,CAASA,SAAS,SAClB,kBAAC,GAAD,CAASA,SAAS,UAClB,kBAAC,GAAD,CAASA,SAAS,SAClB,kBAAC,GAAD,CAASA,SAAS,YAClB,kBAAC,GAAD,CAASA,SAAS,cAClB,kBAAC,GAAD,CAASA,SAAS,UAClB,kBAAC,GAAD,CAASA,SAAS,YAClB,kBAAC,GAAD,CAASA,SAAS,cClBfG,GAdU,WACrB,OACI,kBAACjF,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,Q,s5BCnBGkF,mCAAf,MCWeC,OATf,WACE,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QCJNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a2950d8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Discord-Logo-White.1c8a54f2.svg\";","import styled from \"styled-components\";\r\n\r\n//Server list - SL\r\n//Server Name - SN\r\n//Channel Info - CI\r\n//Channel List - CL\r\n//Channel Data - CD\r\n//User List - UL\r\n//User Info - UI\r\n\r\nexport const Grid = styled.div`\r\n  display: grid;\r\n\r\n    grid-template-columns: 71px 240px auto 240px;\r\n    grid-template-rows: 46px auto 52px;\r\n    grid-template-areas: \r\n        'SL SN CI CI'\r\n        'SL CL CD UL'\r\n        'SL UI CD UL';\r\n\r\n    height: 100vh;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nimport { Props } from '.';\r\n\r\nexport const Button = styled.button<Props>`\r\n    display:flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-shrink: 0;\r\n\r\n    width: 48px;\r\n    height: 48px;\r\n\r\n    margin-bottom: 8px;\r\n\r\n    background-color: ${props => props.isHome ? 'var(--discord)' : 'var(--primary)'};\r\n\r\n    position: relative;\r\n    cursor: pointer;\r\n    border-radius: 50%;\r\n\r\n    > img {\r\n        width: 40px;\r\n        heigth: 40px;\r\n    }\r\n\r\n    &::before{\r\n        width: 9px;\r\n        height: 9px;\r\n\r\n        position: absolute;\r\n        left: -17px;\r\n        top: calc(50% - 4.5px);\r\n\r\n        background-color: var(--white);\r\n        border-radius: 50%;\r\n\r\n        content: '';\r\n        display: ${props => (props.hasNotifications ? 'inline' : 'none')};\r\n    }\r\n    &::after{\r\n        background-color: var(--notification);\r\n        width: auto;\r\n        height: 16px;\r\n\r\n        padding: 0 4px;\r\n\r\n        position: absolute;\r\n        bottom: -4px;\r\n        right: -4px;\r\n\r\n        border-radius: 12px;\r\n        border: 4px solid var(--quaternary);\r\n\r\n        text-align: right;\r\n        font-size: 13px;\r\n        font-weight: bold;\r\n        color: var(--white);\r\n\r\n        content: '${(props)=> props.mentions && props.mentions}';\r\n        display: ${props => props.mentions && props.mentions> 0 ? 'inline' : 'none' }\r\n    }\r\n\r\n    transition: border-radius 100ms, background-color 100ms;\r\n\r\n    &.active, &:hover{\r\n        border-radius: 16px;\r\n        background-color: ${props => props.isHome? 'var(--discord)':'var(--discord)'}\r\n    }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Button } from './styles';\r\n\r\nimport Discord from '../../assets/Discord-Logo-White.svg';\r\n\r\nexport interface Props{\r\n    selected?: boolean;\r\n    isHome?: boolean;\r\n    hasNotifications?: boolean;\r\n    mentions?:number;\r\n}\r\n\r\nconst ServerButton: React.FC<Props> = ({\r\n    selected,\r\n    isHome,\r\n    hasNotifications,\r\n    mentions\r\n}) => {\r\n    return (\r\n        <Button\r\n            isHome={isHome}\r\n            hasNotifications = {hasNotifications}\r\n            mentions={mentions}\r\n            className={selected ? 'active' : ''}\r\n            >\r\n            {isHome && <img src={Discord} alt=\"Discord logo\" />}\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default ServerButton;\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    grid-area: SL;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    background-color: var(--tertiary);\r\n    padding: 11px 0;\r\n\r\n    max-height: 100vh;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar{\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n    width: 32px;\r\n    border-bottom 2px solid var(--quaternary);\r\n\r\n    margin-bottom: 8px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport ServerButton from '../ServerButton';\r\n\r\nimport { Container, Separator } from './styles';\r\n\r\nconst ServerList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <ServerButton isHome />\r\n\r\n            <Separator />\r\n            <ServerButton />\r\n            <ServerButton hasNotifications />\r\n            <ServerButton mentions={3} />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton hasNotifications />\r\n            <ServerButton />\r\n            <ServerButton />\r\n            <ServerButton mentions={1} />\r\n            <ServerButton />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ServerList;","import styled from \"styled-components\";\r\nimport { ExpandMore } from 'styled-icons/material'\r\n\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;  \r\n\r\n  padding: 0 11px 0 16px;\r\n\r\n  background-color: var(--secondary);\r\n\r\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 1px 0px 0px;\r\n\r\n  z-index: 2;\r\n`\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n\r\n  color: var(--white);\r\n`;\r\n\r\nexport const ExpandIcon = styled(ExpandMore)`\r\n\r\n  width: 28px;\r\n  height: 28px;\r\n\r\n  color: var(--white);\r\n  cursor: pointer;\r\n\r\n`;","import React from 'react';\r\n\r\nimport { Container, Title, ExpandIcon } from './styles';\r\n\r\nconst ServerName: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Title>Servidor do Arthur</Title>\r\n            <ExpandIcon />\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ServerName;","import styled from \"styled-components\";\r\nimport { Hashtag } from \"styled-icons/heroicons-outline\"\r\n\r\nexport const Container = styled.div`\r\n    grid-area: CI;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    padding: 0 17px;\r\n    background-color: var(--primary);\r\n\r\n    box-shadow: rgba(0,0,0, 0.2) 0px 1px 0px 0px;\r\n    z-index: 2;\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n    width: 24px;\r\n    height: 24px;\r\n\r\n    color: var(--symbol);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    margin-left: 9px;\r\n\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n\r\n    color: var(--white)\r\n`;\r\n\r\nexport const Separator = styled.div`\r\n    height: 24px;\r\n    width: 1px;\r\n\r\n    background-color: var(--white);\r\n    opacity: 0.2;\r\n\r\n    margin: 0 13px\r\n`;\r\n\r\nexport const Description = styled.span`\r\n    font-size: 15px;\r\n    color: var(--gray);\r\n`;","import React from 'react';\r\nimport { Container, HashtagIcon, Title, Separator, Description } from './styles';\r\n\r\nconst ChannelInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <HashtagIcon />\r\n            <Title>chat-livre</Title>\r\n            <Separator />\r\n            <Description>Canal aberto para conversas</Description>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelInfo;","import styled from \"styled-components\";\r\nimport { Hashtag } from 'styled-icons/heroicons-outline';\r\nimport {PersonAdd, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  cursor: pointer;\r\n\r\n  padding: 5px 3px;\r\n  border-radius: 5px;\r\n\r\n  background-color: transparent;\r\n\r\n  transition: background-color 100ms;\r\n\r\n  > div{\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  >div span{\r\n    margin-left: 5px;\r\n    color: var(--senary);\r\n  }\r\n\r\n  &:hover, &.active {\r\n    background-color: var(--quinary);\r\n    >div span{\r\n      color: var(--white);\r\n    }\r\n    >div svg{\r\n      opacity: 1;\r\n    }\r\n  }\r\n\r\n`;\r\n\r\nexport const HashtagIcon = styled(Hashtag)`\r\n  display: block !important;\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--symbol);\r\n`;\r\n\r\nexport const InviteIcon = styled(PersonAdd)`\r\n  width: 16px;\r\n  height: 16px;\r\n  \r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n\r\n  opacity: 0;\r\n  transition: opacity 100ms;\r\n\r\n  &:hover{\r\n    color: var(--white);\r\n  }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\nwidth: 16px;\r\nheight: 16px;\r\nmargin-left: 3px;\r\nopacity: 0;\r\n\r\ncolor: var(--symbol);\r\ncursor: pointer;\r\n\r\ntransition: opacity 100ms;\r\n\r\n&:hover{\r\n  color: var(--white);\r\n}\r\n`;","import React from 'react';\r\nimport { Container, HashtagIcon, InviteIcon, SettingsIcon } from './styles';\r\n\r\nexport interface Props{\r\n    channelName: string;\r\n    selected?: boolean;\r\n}\r\n\r\nconst ChannelButton: React.FC<Props> = ({\r\n    channelName,\r\n    selected\r\n}) => {\r\n    return (\r\n        <Container className={selected?'active':''}>\r\n            <div>\r\n                <HashtagIcon />\r\n                <span>{channelName}</span>\r\n            </div>\r\n            <div>\r\n                <InviteIcon />\r\n                <SettingsIcon />\r\n            </div>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelButton;","import styled from \"styled-components\";\r\nimport { Add } from \"styled-icons/material\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CL;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 24px 9.5px 0 16px;\r\n  background-color: var(--secondary);\r\n`;\r\n\r\nexport const Category = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  margin-bottom: 6px;\r\n\r\n  > span{\r\n    text-transform: uppercase;\r\n    font-size:12px;\r\n    font-weight: 500;\r\n    color: var(--gray);\r\n  }\r\n`;\r\n\r\nexport const AddCategoryIcon = styled(Add)`\r\n  width: 21px;\r\n  height: 21px;\r\n\r\n  color: var(--symbol);\r\n  cursor: pointer;\r\n`;","import React from 'react';\r\n\r\nimport ChannelButton from '../ChannelButton';\r\n\r\nimport { Container, Category, AddCategoryIcon } from './styles';\r\n\r\nconst ChannelList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Category>\r\n                <span>Canais de texto</span>\r\n                <AddCategoryIcon />\r\n            </Category>\r\n            <ChannelButton channelName='chat-livre'/>\r\n            <ChannelButton channelName='trabalho'/>\r\n            <ChannelButton channelName='lolzinho'/>\r\n            <ChannelButton channelName='csgo'/>\r\n            <ChannelButton channelName='valorant'/>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelList;","import styled from \"styled-components\";\r\nimport { Mic, Headset, Settings } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: UI;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  padding: 10px;\r\n  background-color: var(--quaternary);\r\n  box-shadow: rgba(0,0,0, 0.2) 0px px 0px 0px;\r\n`;\r\n\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  border-radius: 50%;\r\n\r\n  background-color: var(--gray);\r\n`;\r\n\r\nexport const UserData = styled.div`\r\n  margin-left: 8px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  >strong{\r\n    color: var(--white);\r\n    font-size: 13px;\r\n    display: block;\r\n  }\r\n  >span{\r\n    color: var(--gray);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const Icons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  > svg:not(:first-child){\r\n    margin-left: 7px;\r\n  }\r\n`;\r\n\r\nexport const MicIcon = styled(Mic)`\r\n  width: 20px;\r\n  height: 20px;\r\n  \r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n\r\n  transition: opacity 100ms;\r\n\r\n  &:hover{\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const HeadphoneIcon = styled(Headset)`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n\r\n  transition: opacity 100ms;\r\n\r\n  &:hover{\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SettingsIcon = styled(Settings)`\r\n  width: 20px;\r\n  height: 20px;\r\n\r\n  color: var(--white);\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n\r\n  transition: opacity 100ms;\r\n\r\n  &:hover{\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { Container, Profile, Avatar, UserData, Icons, MicIcon, HeadphoneIcon, SettingsIcon } from './styles';\r\n\r\nconst UserInfo: React.FC = () => {\r\n    return (\r\n        <Container>\r\n\r\n            <Profile>\r\n                <Avatar />\r\n                <UserData>\r\n                    <strong>Arthur Matias</strong>\r\n                    <span>#6699</span>\r\n                </UserData>\r\n            </Profile>\r\n\r\n            <Icons>\r\n                <MicIcon />\r\n                <HeadphoneIcon />\r\n                <SettingsIcon />\r\n            </Icons>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default UserInfo;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  padding: 4px 16px;\r\n  margin-right: 4px;\r\n\r\n  background-color: transparent\r\n\r\n  &.mention {\r\n    background-color: var(--mention-message);\r\n\r\n    border-left: 2px solid var(--mention-detail);\r\n    padding-left: 14px;\r\n  }\r\n\r\n  & + div {\r\n    margin-top: 13px;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n\r\n  background-color: var(--secondary);\r\n  border-radius: 50%;\r\n\r\n  &.bot{\r\n    background-color: var(--mention-detail);\r\n  }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n  min-height: 40px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  \r\n  margin-left: 17px;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  >strong{\r\n    color: var(--white);\r\n    font-size: 16px;\r\n  }\r\n\r\n  >span{\r\n    margin-left: 6px;\r\n\r\n    background-color: var(--discord);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n    padding: 4px 5px;\r\n\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 11px;\r\n  }\r\n\r\n  > time{\r\n    margin-left: 6px;\r\n    color: var(--gray);\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n  text-align: left;\r\n  font-size: 10px;\r\n  color: var(--white);\r\n`;\r\n\r\nexport const Mention = styled.span`\r\n  color: var(--link);\r\n  cursor: pointer;\r\n  &:hover{\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container, Avatar, Message, Header, Content } from './styles';\r\nexport { Mention } from './styles'\r\nexport interface Props{\r\n    author: string;\r\n    date:string;\r\n    content: string | React.ReactElement | React.ReactNode;\r\n    hasMention?: boolean;\r\n    isBot?: boolean;\r\n}\r\n\r\nconst ChannelMessage: React.FC<Props> = ({\r\n    author,\r\n    date,\r\n    content,\r\n    hasMention,\r\n    isBot\r\n}) => {\r\n    return (\r\n        <Container className={hasMention? 'mention':''}>\r\n            <Avatar className={isBot?'bot':''}/>\r\n\r\n            <Message>\r\n                <Header>\r\n                    <strong>{author}</strong>\r\n                    {isBot && <span>Bot</span>}\r\n                    <time>{date}</time>\r\n                </Header>\r\n                <Content>{content}</Content>\r\n            </Message>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelMessage;","import styled from \"styled-components\";\r\nimport { AlternateEmail } from 'styled-icons/material';\r\n\r\nexport const Container = styled.div`\r\n  grid-area: CD;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n\r\n  background-color: var(--primary);\r\n`;\r\n\r\nexport const Messages = styled.div`\r\n  padding: 20px 0;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  max-height: calc(100vh - 46px - 68px);\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n  }\r\n\r\n  ::-webkit-scrollbar-track {\r\n    background-color: var(--secondary);\r\n  }\r\n\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 16px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 44px;\r\n\r\n  padding: 0 10px 0 57px;\r\n  border-radius: 7px;\r\n\r\n  color: var(--white);\r\n  background-color: var(--chat-input);\r\n\r\n  position: relative;\r\n\r\n  &::placeholder{\r\n    color: var(--gray);\r\n  }\r\n\r\n  ~ svg {\r\n    position: relative;\r\n    top: -50%;\r\n    left: 14px;\r\n    transition: 180ms ease-in-out;\r\n  }\r\n`;\r\n\r\nexport const InputIcon = styled(AlternateEmail)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  color: var(--gray);\r\n`;\r\n","import React, {KeyboardEvent, useRef, useEffect, useState } from 'react';\r\n\r\nimport ChannelMessage, { Mention } from '../ChannelMessage';\r\n\r\nimport { Container, Messages, InputWrapper, Input, InputIcon } from './styles';\r\n\r\nconst ChannelData: React.FC = () => {\r\n    const messagesRef = useRef() as React.MutableRefObject<HTMLDivElement>;\r\n\r\n    useEffect(()=>{\r\n        const div = messagesRef.current;\r\n\r\n        if(div){\r\n            div.scrollTop = div.scrollHeight;\r\n        }\r\n    })\r\n    let messageList = [\r\n        {\r\n            author: \"Bot Master\",\r\n            date: \"19/06/2020\",\r\n            content: \"Bem Vindos ao Servidor do Arthur\",\r\n            isBot: true,\r\n            hasMention: false,\r\n            mentionTo: \"\",\r\n        },\r\n        {\r\n            author: \"ygor\",\r\n            date: \"20/06/2020\",\r\n            content: \"Salve\",\r\n            isBot: false,\r\n            hasMention: false,\r\n            mentionTo: \"\",\r\n        },\r\n        {\r\n            author: \"pips\",\r\n            date: \"21/06/2020\",\r\n            content: \"Salvee\",\r\n            isBot: false,\r\n            hasMention: false,\r\n            mentionTo: \"\",\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        <Container>\r\n            <Messages ref={messagesRef}>\r\n                {messageList.map(message=>{\r\n                    return <ChannelMessage\r\n                        author={message.author}\r\n                        date={message.date}\r\n                        content={message.content}\r\n                        isBot={message.isBot}\r\n                        hasMention={message.hasMention}\r\n                    />\r\n                })}\r\n            </Messages>\r\n\r\n            <InputWrapper>\r\n                <Input type=\"text\" placeholder=\"Conversar em #chat-livre\" />\r\n                <InputIcon />\r\n            </InputWrapper>\r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default ChannelData;","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  grid-area: UL;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  padding: 3px 6px 0 16px;\r\n  background-color: var(--secondary);\r\n\r\n  max-height: calc(100vh - 46px);\r\n  overflow-y: scroll;\r\n\r\n  ::-webkit-scrollbar {\r\n    width: 4px\r\n  }\r\n\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: var(--tertiary);\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  ::-webkit-scrollbar-track {\r\n    background-color: var(--secondary);\r\n  }\r\n`;\r\n\r\nexport const Role = styled.span`\r\n  margin-top: 20px;\r\n\r\n  text-transform: uppercase;\r\n  font-size: 12px;\r\n  font-weight: 500;\r\n  color: var(--gray);\r\n`;\r\n\r\nexport const User = styled.div`\r\n  margin-top: 5px;\r\n  padding: 5px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  cursor: pointer;\r\n  \r\n  border-radius: 4px;\r\n  background: transparent;\r\n  transition: background 100ms;\r\n  &:hover{\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  > strong{\r\n    margin-left: 13px;\r\n    font-weight: 500;\r\n    color: var(--white);\r\n    opacity: 0.7;\r\n\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n  }\r\n\r\n  > span{\r\n    margin-left: 9px;\r\n\r\n    background-color: var(--discord);\r\n    color: var(--white);\r\n    border-radius: 4px;\r\n    padding: 4px 5px;\r\n\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    font-size: 11px;\r\n  }\r\n`;\r\n\r\nexport const Avatar = styled.div`\r\n  flex-shrink: 0;\r\n  \r\n  width: 32px;\r\n  height: 32px;\r\n\r\n  border-radius: 50%;\r\n  background-color: var(--primary);\r\n  aspect-ratio: 1 / 1;\r\n\r\n  &.bot{\r\n    background-color: var(--mention-detail);\r\n  }\r\n  &.active{\r\n    background-color: var(--online);\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport { Container, Role, User, Avatar } from './styles';\r\n\r\ninterface UserProps{\r\n    nickname: string;\r\n    isBot?:boolean;\r\n    isActive?:boolean;\r\n}\r\n\r\nconst UserRow: React.FC<UserProps> = ({\r\n    nickname,\r\n    isBot,\r\n    isActive\r\n}) => {\r\n    return (\r\n        <User>\r\n            <Avatar className={isBot? 'bot':isActive?\"active\":\"\"}/>\r\n            <strong>{nickname}</strong>\r\n\r\n            {isBot && <span>Bot</span>}\r\n        </User>\r\n    )\r\n}\r\n\r\nconst UserList: React.FC = () => {\r\n    return (\r\n        <Container>\r\n            <Role>Disponível - 1</Role>\r\n\r\n            <UserRow nickname=\"Bot Master\" isBot/>\r\n            <UserRow nickname=\"Arthur Matias\" isActive={true}/>\r\n            <UserRow nickname=\"Ygor\" isActive={true}/>\r\n            <UserRow nickname=\"Pips\" isActive={true}/>\r\n\r\n            <Role>Offline - 19</Role>\r\n            <UserRow nickname=\"Jacira\" />\r\n            <UserRow nickname=\"Rose\" />\r\n            <UserRow nickname=\"Eliza\" />\r\n            <UserRow nickname=\"Guga\" />\r\n            <UserRow nickname=\"Joelson\" />\r\n            <UserRow nickname=\"Claudinei\" />\r\n            <UserRow nickname=\"Chris\" />\r\n            <UserRow nickname=\"TitanMk\" />\r\n            <UserRow nickname=\"marinho\" />\r\n            \r\n        </Container>\r\n    )\r\n};\r\n\r\nexport default UserList;","import React from 'react';\r\n\r\nimport { Grid } from './styles';\r\n\r\nimport ServerList from '../ServerList';\r\nimport ServerName from '../ServerName';\r\nimport ChannelInfo from '../ChannelInfo';\r\nimport ChannelList from '../ChannelList';\r\nimport UserInfo from '../UserInfo';\r\nimport ChannelData from '../ChannelData';\r\nimport UserList from '../UserList';\r\n\r\nconst Layout: React.FC = () => {\r\n    return (\r\n        <Grid>\r\n            <ServerList />\r\n            <ServerName />\r\n            <ChannelInfo />\r\n            <ChannelList />\r\n            <UserInfo />\r\n            <ChannelData />\r\n            <UserList />\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default Layout;","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n    *{\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box\r\n    }\r\n    *, button, input{\r\n        border: 0;\r\n        outline: 0;\r\n\r\n        font-family: 'Roboto', sans-serif !important;\r\n    }\r\n\r\n    html, body, #root{\r\n        heigth: 100%;\r\n    }\r\n\r\n    :root {\r\n        --primary: #36393f;\r\n        --secondary: #2f3136;\r\n        --tertiary: rgb(32,34,37);\r\n        --quaternary: #292b2f;\r\n        --quinary: #393d42;\r\n        --senary: #828386;\r\n       \r\n        --white: #fff;\r\n        --gray: #8a8c90;\r\n        --chat-input: rgb(64,68,75);\r\n        --symbol: #74777a;\r\n     \r\n        --notification: #f84a4b;\r\n        --discord: #6e86d6;\r\n        --mention-detail: #f9a839;\r\n        --mention-message: #413f3f;\r\n     \r\n        --link: #5d80d6;\r\n        --online: #5dd66f;\r\n        --discord-clone: #6633cc;\r\n      }\r\n`;","import React from 'react';\r\nimport Layout from './components/Layout'\r\nimport GlobalStyles from './styles/globalStyles';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Layout />\r\n      <GlobalStyles />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}